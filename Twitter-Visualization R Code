# Install
install.packages("tm")  # for text mining
install.packages("SnowballC") # for text stemming
install.packages("wordcloud") # word-cloud generator 
install.packages("RColorBrewer") # color palettes
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")

text <- readLines(file.choose())
filePath <- "xxxx/File.csv"
text <- readLines(filePath)

# Load the data as a corpus
docs <- Corpus(VectorSource(text))

inspect(docs)

#Text Transformation
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")

#Cleaning the data
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2")) 
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)

#Term Document Frequency
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)


#Generate Word Cloud
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, "Dark2"))

#######################################################################################

#Finding CorrelationWords
correlationWords = findAssocs(dtm, terms = "nationalagendaforum", corlimit = 0.1)


#Bar Diagram 
barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
        col ="lightblue", main ="Most frequent words",
        ylab = "Word frequencies")
#########################################################################################

############ Network Diagram ####################

links2 <- m
library(igraph)
newColumn = matrix(rowSums(links2),ncol=1,byrow=TRUE)
head(newColumn)
mergeColumn=cbind(links2,newColumn)

sortedByColumn=mergeColumn[order(mergeColumn[,ncol(mergeColumn)], decreasing = TRUE),]
head(sortedByColumn[,ncol(sortedByColumn)],10)
library(igraph)

##### Top 50 Words #########
top50Words = sortedByColumn[1:50,1:(ncol(sortedByColumn)-1)]
net4 <- graph_from_incidence_matrix(top50Words)
net4.bp <- bipartite.projection(net4)
plot(net4.bp$proj1, edge.arrow.size=.2, edge.curved=0,vertex.color="orange", vertex.frame.color="#555555",vertex.label.color="black", vertex.label.cex=.7)

###### Top 20 Words ########
top20Words = sortedByColumn[1:20,1:(ncol(sortedByColumn)-1)]
net5 <- graph_from_incidence_matrix(top20Words)
net5.bp <- bipartite.projection(net5)
plot(net5.bp$proj1, edge.arrow.size=.2, edge.curved=0,vertex.color="orange", vertex.frame.color="#555555",vertex.label.color="black", vertex.label.cex=.7)


